
# Beans are nothing but the java POJO classes (Plain Old Java Objects)

# Prerequisite for Spring
- Core Java ( OOPS, Constructor, etc)
- JDBC
- Hibernate
- Servlet and JSP (MVC - Model View Controller)
- SQL

# Topics

- Spring core : IOC, Dependency injection
- Spring Data Integration
- Spring Web (Mvc)
- Spring Boot
- Spring AOP

------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------

# What is Spring 

- Spring is Dependency injection framework which makes java application loosely coupled
- Spring framework makes easy development of java applications

------------------------------------------------------------------------------------------------------------------------------------------------
# Dependency Injection

- If one class depend up on other class to complete its execution then we can say that one class is depend up on other class
- Dependency injection is the property of Spring where spring can automatically create object of one class and inject in other class (wherever needed)
- No need to create object of a class manually
- The process of creating a object of class automatically and injecting it in required class is know of Inversion of Control
- IOC : Inversion of Control is design pattern
- IOC container will mange the object lifecycle

------------------------------------------------------------------------------------------------------------------------------------------------

# Spring Modules

   Total 4 modules here  

1) Spring Core  ----------------> 
   i) Core  ii) Beans  iii) Context  iv) spEL (Spring Expression Language)

   - Spring context inherit the features of beans module
   - spEL will manage expression language and manipulate the object graph at runtime

2)   ----------------> 

  i) AOP   ii) Aspect  iii) Instrumentation  iv) Messaging

  - AOP allows to define methods, interceptors which makes the code decoupled
  - Messaging will maps the messages with annotations

3) Data Access/Integration Layer  ---------------->

   i) JDBC  ii) JMS  iii) ORM  iv) OXM

   i) JDBC : Spring JDBC provides JDBC abstraction layer that removes need of tedious JDBC code 

   ii) JMS : Produce and Consume messages

   iii) ORM : Spring ORM module will provide integration layer with which spring can integrate any ORM tool in spring application (Ex: Hibernate ORM Tool)

   iv) OXM : It supports object Xml mapping

4) Web Module ---------------->

 i) Web  ii) Servlet   iii) Portlet  iv) WebSocket

5) Test Module  ---------------->

 -Provides features of testing 
 -Provides mock object for isolation testing

------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------

# Spring IOC Container (Inversion Of Control)

- Spring IOC Container is predefine program 
- It is component of spring which is inbuilt in spring framework
- Spring IOC Container will create objects, hold objects in memory and inject them in other object whenever required (Dependency Injection)
-Spring IOC container maintain the object lifecycle.

- Spring container should know which are the Beans/POJO classes need to manage and Configuration information(Config file)
- Configuration file tells which object is depend on other object

# ApplicationContext

- ApplicationContext is interface
- ApplicationContext represents the Spring IOC Container that holds all the beans created by application
- ApplicationContext is responsible for instantiating,configuring, and creating beans.

- Subclasses of ApplicationContext (Implementation of Application context)

i)   ClasspathXMLApplicationContext : It searches XML configuration from java class path.
ii)  AnnotationConfigApplicationContext : It searches Beans/classes on which annotations are used.
iii) FileSystemXMLApplicationContext : It searches the config file from the file system.

------------------------------------------------------------------------------------------------------------------------------------------------


# Ways of Injecting Dependencies

 Dependency Injection can be done in two ways :

    i) Setter Injection  (Property Injection)
    ii)Constructor Injection 

# Configuration File in Spring (XML)
- Beans : The class which are provided to IOC Container are called Beans
- Configuration file provides information to IOC container
- Configuration file is file where we declare beans and its dependency
- XML file will always starts with <beans> <bean>   </bean> </beans>

# Data Types (Dependencies)
  Three Types of Data types handle by IOC Container

  1) Primitive DataTypes
   byte,short,chat,int,float,double,long,boolean

  2) Collection Type
   List,Set,Map and Properties
  
  3) Reference Type
    -Non primitive data type / User define data types


# Property Injection using Value as attribute

 <property name="exampleId" value="1234"> </property>

# Property Injection using P schema

# Inject collection types List,Set,Map and properties

- In order to use Map in bean use 

   <map>  
   <entry key=" " value=" "> 
    <entry key=" " value=" ">
   </map>